# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def deleteDuplicatesUnsorted(self, head):

        # make a counter of the nodes in linked list 

        curr = head
        node_map = defaultdict(int)
        while curr:
            node_map[curr.val] += 1
            curr = curr.next


        ans = ListNode(-1)
        ans.next = head
        

        while ans.next and node_map[ans.next.val] > 1:
            ans = ans.next

        curr2 = ans.next
        
        while curr2:
            while curr2.next and node_map[curr2.next.val]>1:
                curr2.next = curr2.next.next
            curr2 = curr2.next

        return ans.next
        """
        :type head: ListNode
        :rtype: ListNode
        """
        