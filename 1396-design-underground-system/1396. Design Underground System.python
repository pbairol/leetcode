class UndergroundSystem(object):

    def __init__(self):
        self.checkInData = {}
        self.journeyData = {}
        

    def checkIn(self, id, stationName, t):
        self.checkInData[id] = [stationName,t]
    
        """
        :type id: int
        :type stationName: str
        :type t: int
        :rtype: None
        """
        

    def checkOut(self, id, stationName, t):
        startStation,startTime = self.checkInData.get(id)
        

        tripTime = t- startTime

        if (startStation,stationName) not in self.journeyData:
            self.journeyData[(startStation,stationName)] = [tripTime,1]
        
        else:
            self.journeyData[(startStation,stationName)][0] += tripTime
            self.journeyData[(startStation,stationName)][1] += 1
        """
        :type id: int
        :type stationName: str
        :type t: int
        :rtype: None
        """
        

    def getAverageTime(self, startStation, endStation):
        totalTime,totalTrips = self.journeyData[(startStation,endStation)]
        return (totalTime*1.0/totalTrips)
        """
        :type startStation: str
        :type endStation: str
        :rtype: float
        """
        


# Your UndergroundSystem object will be instantiated and called as such:
# obj = UndergroundSystem()
# obj.checkIn(id,stationName,t)
# obj.checkOut(id,stationName,t)
# param_3 = obj.getAverageTime(startStation,endStation)