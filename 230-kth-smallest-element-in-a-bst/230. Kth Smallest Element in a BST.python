# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def kthSmallest(self, root, k):
        heap = []

        def dfs(root):
            if root:
                heap.append(root.val)
            if root.left:
                dfs(root.left)
            if root.right:
                dfs(root.right)

        dfs(root)
        print(heapify(heap))

        for i in range(k-1):
            heapq.heappop(heap)
        
        return heapq.heappop(heap)
        """
        :type root: TreeNode
        :type k: int
        :rtype: int
        """
        